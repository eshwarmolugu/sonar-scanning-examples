#!/usr/bin/groovy

// pipeline-library (above) is imported from DOCET. Their github with all the source code is here:
//  https://github.devops.worldpay.local/DOCET/wp-pipeline-library

pipeline {
agent any
  environment {
    		 SCANNER_HOME = tool 'sonarScanner'
  		}
    stages {
       stage('J1') {
            steps {
                echo "Deploy to Nexus"
            }
        }
        stage('J2Sonar') {
                    steps {
                       echo 'sonartest'
			     //sonarTest()
                    }
                }
         

        stage('J3Change'){
            steps {
                createServiceNowChangeRequest()
            }
        } //Deployment to production

       
    }  // end stages in Maven Agent
   /* post {
        success {
            echo "Success"
        }
        failure {
            echo "Failue"
        }
        aborted {
            echo "Error"
        }
        always {
            echo "Send Report"
        }
    } */ 
	// end post
}  // end Pipeline


def sonarTest() {
    
      
	       withSonarQubeEnv('localSonar') {
		       sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
        }
}

def functionalTest() {
    echo "Functional Test"
    //try {
        //withCredentials([string(credentialsId: 'A2CR_UNIQUE', variable: 'token')]) {
          //  mvnRun("test -DskipTestsUnit -DskipTestsComponent -Da2cr.lowell.unique='${token}' -Dspring.profiles.active=dev")
        //}
    //} finally {
      //  junit '**/target/surefire-reports/TEST-*.xml'
    //}


}

def uploadArtifactToServiceNow() {
    def pomVersion = "1.0.0"
    def applicationJar = "a2cr-app-1.0.0-exec.jar";
    def groupIdPath = "A2CR_GROUP";
    def repoPath = groupIdPath + "/a2cr-app";
    def packageName = "a2crpackage";

    echo "begin ---snDevOpsArtifact-----"
    snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${applicationJar}", "version": "${pomVersion}","semanticVersion": "${pomVersion}","repositoryName": "${repoPath}"}], "branchName": "${env.BRANCH_NAME}"}""")
    echo "end ---snDevOpsArtifact-----"

    echo "begin ---snDevOpsPackage-----"
    snDevOpsPackage(name: "${packageName}", artifactsPayload: """{"artifacts": [{"name": "${applicationJar}", "version": "${pomVersion}","semanticVersion": "${pomVersion}","repositoryName": "${repoPath}"}], "branchName": "${env.BRANCH_NAME}"}""")
    echo "end ---snDevOpsPackage-----"
}



def createServiceNowChangeRequest() {
    echo "begin ---snDevOpsChange-----"
    snDevOpsChange()
    echo "end ---snDevOpsChange-----"
}
